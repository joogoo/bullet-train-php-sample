e eab4448 Initial commit
e 1c1e7ab Initial commit
e aa27d92 Update
e cb50863 Update
e d91187c Update
e a07a62b update
e a2e9331 Feature login
e 1476db7 conf
e fc05b03 test
e b5e70b7 fix api/frontend links
e b276d51 readme
e 1a8673e Google Account Service Id
e 795d553 nice ui
e 0814884 feature flag management
e 04118a9 update
e 673342a update
e 3caaa94 update
e 45d3e12 update
e 8f65c6f update
e af0887d README
e 5d1789c README
e 3c42898 update
e a10381c composer update
e 07a817a update

# Rebasage de 07a817a sur 07a817a (24 commandes)
#
# Commandes :
#  p, pick <commit> = utiliser le commit
#  r, reword <commit> = utiliser le commit, mais reformuler son message
#  e, edit <commit> = utiliser le commit, mais s'arrêter pour le modifier
#  s, squash <commit> = utiliser le commit, mais le fusionner avec le précédent
#  f, fixup <commit> = comme "squash", mais en éliminant son message
#  x, exec <commit> = lancer la commande (reste de la ligne) dans un shell
#  b, break = s'arrêter ici (on peut continuer ensuite avec 'git rebase --continue')
#  d, drop <commit> = supprimer le commit
#  l, label <label> = étiqueter la HEAD courante avec un nom
#  t, reset <label> = réinitialiser HEAD à label
#  m, merge [-C <commit> | -c <commit>] <label> [# <uniligne>]
#          créer un commit de fusion utilisant le message de fusion original
#          (ou l'uniligne, si aucun commit de fusion n'a été spécifié).
#          Utilisez -c <commit> pour reformuler le message de validation.
#
# Vous pouvez réordonner ces lignes ; elles sont exécutées de haut en bas.
#
# Si vous éliminez une ligne ici, LE COMMIT CORRESPONDANT SERA PERDU.
#
# Cependant, si vous effacez tout, le rebasage sera annulé.
#
# Veuillez noter que les commits vides sont en commentaire
